#Git configuration
git config --global user.name "username"
git config --global user.email "user@email.com"

#Reading Git current configuration
->get user name
git config user.name
->get user email
git config user.email

#Creating a Local Repository that contain working Tree and staging area.
mkdir repos
cd repos
mkdir myproj
cd myproj
git init
Initialized empty Git repository in C:/Users/Nassim/repos/myproj/.git/
ls -a
.  ..  .git

#Commit to a local repository using command line.
1-
under the file directory
myproj$ git status
On branch master
Initial commit
nothing to commit (create/copy files and use "git add" to track)
-> That's mean the directory is empty
myproj$ touch fileA
-> Creating file named "fileA"
myproj$ git status
On branch master
Initial commit
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fileA.txt
nothing added to commit but untracked files present (use "git add" to track)
-> The file is UNTRACKED.
-> Show that the directory contain fileA and suggest to add it using "git add".

2- Using git add the add content to the staging area.
stage content is part of the next commit.
myproj$ git add fileA.txt
myproj$ git status
On branch master
Initial commit
Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   fileA.txt
-> Shows that there is a chaingins in the staging area that could be commited to the repository.
***

git add command contain multiple option to add single file or a directory or just "git add ." that add all the content under the directory we are working on.

#Commit content using git commit
Using git commit command to add stage content to the local repository as a commit.
REVIEW:
git status -> View the status of files in the working tree and staging area.
git add -> adds untracked or midified files to the staging area.
git commit ->Creates a snapshot of the current project.
git log -> View the commit history.

# Ceate remote repository.
Clone and add
Clone is a local copy of a remote repository.
git clone
is a command used to create a copy of a local repository for a remote repository.

#Commit to remote repository
This is done after cloning from a remote repository. 
Execute 
git remote -v
. You should see the URL to your remote repository, and see that the shortcut name of this remote repository is origin

Execute 
git push -u origin master
. The -u flag sets up the local and remote branches as tracking branches. origin is a shortcut name for the remote repository. 
master is the branch to push. We are pushing the default branch named master.

To get the last Updates from a repository
Execute the command
git pull origin master

#Branch
Viewing all branchs
git branch

Create new branch
git branch new-branch-name

To swith to a specific branch
git checkout branch-name

To Create new branch and to switch on it directly
git checkout -b new-branch-name

To add Up dates from branchA to branchB

First switch to branchA than execute this command
git merge branchB

and at the end 
git push origin master

#Resolving conflicts
In case two branch are working in the same file, so his can generate conflicts about which version git have to merge. here we have to decide the version to work with.

#Looking for who did modifcation in the repository
git blame file-name
This can give as the information about the commit using the ID SAH than searching in the git log (history) about that commit using the ID SAH, than we can know the person hwo did the modification

git show ID-SAH

#Ignoring file
In case we want to create some files (configuration files for example) and we don't want to put them in git.
first we create a file colling it .gitignore
touch .gitignore
than we open this file and we mention the name of the file that we want ignore.

#Avoiding non finale commit in case we have merge from  master but we want to go back after that to our branch.

git stash

After that my work will be saved than i can go back and doing what ever the operation asking by my collegue, ones i finished the work asking and now i'm looking to go back and handle my previous job, i can execute this commad.
git stash pop

This command bring to the status of my file when i used "git stash"



 
